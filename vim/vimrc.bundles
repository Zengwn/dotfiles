" vimrc.bundles
" Author: Mark Nichols <mark@zanshin.net>
" Source: http:/github.com/zanshin/dotfiles/vim/vimrc.bundles
"
" Plugins {{{
call plug#begin('~/.vim/plugged')

" ----- Make Vim look good
Plug 'itchyny/landscape.vim'
Plug 'bling/vim-airline'

" ----- Syntax & Highlighting
Plug 'plasticboy/vim-markdown'
Plug 'Yggdroot/indentLine'

" ----- Git helpers
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'Xuyuanp/nerdtree-git-plugin'

" ----- Undo
Plug 'sjl/gundo.vim'

" ----- Utilities
Plug 'scrooloose/nerdtree'
Plug 'rizzatti/dash.vim'
Plug 'tpope/vim-surround'
Plug 'tomtom/tcomment_vim'
Plug 'kien/ctrlp.vim'
Plug 'benmills/vimux'

" ----- Markdown
Plug 'junegunn/goyo.vim'
Plug 'reedes/vim-pencil'

call plug#end() 

" turn things on
if has('autocmd')
  filetype plugin indent on
endif

if has('syntax') && !exists('g:syntax_on')
  syntax on
endif

" }}}
" Color scheme {{{
set background=dark
silent! colorscheme landscape

" }}}
" Netrw {{{
let g:netrw_liststyle=3

" }}}
" Python {{{
let g:python_host_prog = 'usr/bin/python'

" }}}
" Airline {{{
let g:airline_left_sep=''
let g:airline_right_sep=''
let g:airline#extensions#whitespace#trailing_format = 'trailing[%s]'
let g:airline#extensions#whitespace#mixed_indent_format = 'mixed-indent[%s]'
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#branch#empty_message = ''
" Enable the list of buffers
let g:airline#extensions#tabline#enabled = 1
" Hide function display (don't use it)
let g:airline#extensions#tagbar#enabled = 0

" Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'

let g:airline_theme='dark'


" }}}
" Control-P {{{
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'

" }}}
" Fugitive {{{
" need some settings here
" }}}
" Git Gutter {{{
" hi clear SignColumn               " required after changing colorscheme
" In vim-airline, only display "hunks" if the diff is non-zero
" let g:airline#extensions#hunks#non_zero_only = 1

" }}}
" Markdown {{{
" Highligh YAML frontmatter as used by Jekyll
let g:vim_markdown_frontmatter=1

" }}}
" Gundo {{{
nnoremap <leader>U :GundoToggle<CR>

" }}}
" Nerdtree {{{
map <C-n> :NERDTreeToggle<cr>

let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ "Unknown"   : "?"
    \ }

" }}}
" Dash {{{
nmap <silent><leader>d <Plug>DashSearch

" }}}
" Goyo {{{
let g:goyo_width=100
let g:goyo_height=90

" }}}
" Pencil {{{
augroup pencil
  autocmd!
  autocmd FileType markdown,mkd call pencil#init()
  autocmd FileType text         call pencil#init()
augroup END

" }}}
" indentLine {{{
let g:indentLine_color_term = 239
let g:indentLine_char = "|"
nmap <leader>i :IndentLinesToggle<cr>

" }}}
" Vimux {{{
" mappings
nmap <leader>vp :VimuxPromptCommand<cr>
nmap <leader>vl :VimuxRunLastCommand<cr>
nmap <leader>vq :VimuxCloseRunner<cr>
nmap <leader>vx :VimuxInterruptRunner<cr>

" Octopress helpers
nmap <leader>vg :call VimuxRunCommand("gen")<cr>
nmap <leader>vi :call VimuxRunCommand("ingen")<cr>
nmap <leader>vz :call VimuxRunCommand("dz")<cr>
nmap <leader>vd :call VimuxRunCommand("deploy")<cr>

" }}}
" finis {{{

" }}}
